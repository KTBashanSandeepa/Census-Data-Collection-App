// Generated by view binder compiler. Do not edit!
package com.example.censusdatacollectionapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.censusdatacollectionapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExampleItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView Age;

  @NonNull
  public final TextView Gender;

  @NonNull
  public final TextView Name;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView textView3;

  private ActivityExampleItemBinding(@NonNull CardView rootView, @NonNull TextView Age,
      @NonNull TextView Gender, @NonNull TextView Name, @NonNull ImageView imageView,
      @NonNull TextView textView3) {
    this.rootView = rootView;
    this.Age = Age;
    this.Gender = Gender;
    this.Name = Name;
    this.imageView = imageView;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExampleItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExampleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_example_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExampleItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Age;
      TextView Age = ViewBindings.findChildViewById(rootView, id);
      if (Age == null) {
        break missingId;
      }

      id = R.id.Gender;
      TextView Gender = ViewBindings.findChildViewById(rootView, id);
      if (Gender == null) {
        break missingId;
      }

      id = R.id.Name;
      TextView Name = ViewBindings.findChildViewById(rootView, id);
      if (Name == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivityExampleItemBinding((CardView) rootView, Age, Gender, Name, imageView,
          textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
